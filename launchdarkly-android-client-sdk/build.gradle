plugins {
    id("com.android.library")
    id("signing")
    id("maven-publish")
    id("com.getkeepsafe.dexcount")
}

group = "com.launchdarkly"
// Specified in gradle.properties
version = version

android {
    compileSdkVersion(30)
    buildToolsVersion = "30.0.3"

    defaultConfig {
        minSdkVersion(21)
        targetSdkVersion(30)
        // at some point between android gradle 3.1.0 and 4.x.x the versionName field in this dsl
        // stopped generating the BuildConfig::VERSION_NAME field in the end java
        // classpath. put this here to bring back that field
        buildConfigField("String", "VERSION_NAME", "\"$version\"")
        consumerProguardFiles("consumer-proguard-rules.pro")

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments["clearPackageData"] = "true"
    }

    testOptions {
        execution = "ANDROIDX_TEST_ORCHESTRATOR"
    }

    packagingOptions {
        exclude("META-INF/**")
    }

    useLibrary("android.test.runner")
    useLibrary("android.test.base")
    useLibrary("android.test.mock")
}

configurations {
    commonClasses {
        transitive = false
    }
    commonDoc {
        transitive = false
    }
}

configurations.all {
    // allows snapshot dependencies to be updated
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

ext {}
ext.versions = [
    "androidAnnotation": "1.2.0",
    "eventsource": "3.0.0-SNAPSHOT",
    "gson": "2.8.9",
    "jacksonCore": "2.10.5",
    "jacksonDatabind": "2.10.5.1",
    "junit": "4.13",
    "launchdarklyJavaSdkCommon": "2.0.0-SNAPSHOT",
    "launchdarklyJavaSdkInternal": "1.0.0-SNAPSHOT",
    "launchdarklyLogging": "1.1.1",
    "okhttp": "4.9.2",
    "timber": "5.0.1",
]

dependencies {
    api("com.launchdarkly:launchdarkly-java-sdk-common:${versions.launchdarklyJavaSdkCommon}")
    api("com.launchdarkly:launchdarkly-logging:${versions.launchdarklyLogging}")

    commonDoc("com.launchdarkly:launchdarkly-java-sdk-common:${versions.launchdarklyJavaSdkCommon}:sources")
    // These are included only for Javadoc generation.
    commonClasses("com.fasterxml.jackson.core:jackson-core:${versions.jacksonCore}")
    commonClasses("com.fasterxml.jackson.core:jackson-databind:${versions.jacksonDatabind}")

    implementation("com.google.code.gson:gson:${versions.gson}")
    implementation("androidx.annotation:annotation:${versions.androidAnnotation}")
    implementation("com.launchdarkly:launchdarkly-java-sdk-internal:${versions.launchdarklyJavaSdkInternal}")
    implementation("com.launchdarkly:okhttp-eventsource:${versions.eventsource}")
    implementation("com.squareup.okhttp3:okhttp:${versions.okhttp}")
    implementation("com.jakewharton.timber:timber:${versions.timber}")

    testImplementation("junit:junit:${versions.junit}")
    testImplementation("org.easymock:easymock:4.3")
    testImplementation(project(":shared-test-code"))

    androidTestImplementation("junit:junit:${versions.junit}")
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:${versions.okhttp}")
    androidTestImplementation(project(":shared-test-code"))

    androidTestImplementation("androidx.test:core:1.4.0")
    androidTestImplementation("androidx.test:runner:1.4.0")
    androidTestImplementation("androidx.test:rules:1.4.0")
    androidTestImplementation("androidx.test.ext:junit:1.1.3")
    androidTestImplementation("org.easymock:easymock:4.3")

    androidTestUtil("androidx.test:orchestrator:1.4.1")
}

task javadoc(type: Javadoc) {
    // Include SDK sources
    source android.sourceSets.main.java.srcDirs
    // Include common library sources
    source configurations.commonDoc.collect { zipTree(it) }

    include("**/*.java")

    // Include classpaths for dependencies
    afterEvaluate {
        classpath += files(android.libraryVariants.collect { variant ->
            variant.javaCompileProvider.get().classpath.files
        })
    }
    // Include classpath for commonClasses configuration so Javadoc won't complain about java-sdk-common classes that
    // internally reference Jackson, which we don't use directly
    classpath += project.files(configurations.commonClasses.resolve())
    // Add Android boot classpath for references to Android OS classes.
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

// Force the Javadoc build to fail if there are any Javadoc warnings. See: https://discuss.gradle.org/t/javadoc-fail-on-warning/18141/3
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        // The '-quiet' as second argument is actually a hack,
        // since the one parameter addStringOption doesn't seem to
        // work, we extra add '-quiet', which is added anyway by
        // gradle. See https://github.com/gradle/gradle/issues/2354
        // See JDK-8200363 (https://bugs.openjdk.java.net/browse/JDK-8200363)
        // for information about the -Xwerror option.
        options.addStringOption("Xwerror", "-quiet")
    }
}

tasks.withType(Javadoc) {
    // The following should allow hyperlinks to com.launchdarkly.logging classes to go to
    // the correct external URLs
    if (options instanceof StandardJavadocDocletOptions) {
        (options as StandardJavadocDocletOptions).links(
            "https://javadoc.io/doc/com.launchdarkly/launchdarkly-logging/${versions.launchdarklyLogging}"
        )
    }
}

artifacts {
    archives sourcesJar, javadocJar
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                artifactId = "launchdarkly-android-client-sdk"

                artifact(sourcesJar)
                artifact(javadocJar)

                pom {
                    name = "LaunchDarkly SDK for Android"
                    description = "Official LaunchDarkly SDK for Android"
                    url = "https://github.com/launchdarkly/android-client-sdk"

                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }

                    organization {
                        name = "LaunchDarkly"
                        url = "https://launchdarkly.com/"
                    }

                    developers {
                        developer {
                            id = "sdks"
                            name = "LaunchDarkly SDK Team"
                            email = "sdks@launchdarkly.com"
                        }
                    }

                    scm {
                        connection = "scm:git:git://github.com/launchdarkly/android-client-sdk.git"
                        developerConnection = "scm:git:ssh:git@github.com:launchdarkly/android-client-sdk.git"
                        url = "https://github.com/launchdarkly/android-client-sdk"
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.release
    }
}
