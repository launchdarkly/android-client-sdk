version: 2.1
orbs:
  android: circleci/android@1.0
jobs:
  build:
    executor:
      name: android/android-machine
      resource-class: large

    steps:
      - checkout

      # Create and start emulator
      - android/create-avd:
          avd-name: ci-android-avd
          system-image: system-images;android-25;default;x86
          install: true

      - android/start-emulator:
          avd-name: ci-android-avd
          wait-for-emulator: false

      # Perform tasks we can do while waiting for emulator to start

      # Restore caches
      - android/restore-gradle-cache
      - android/restore-build-cache

      - run:
          name: Build local tests
          command: ./gradlew :launchdarkly-android-client-sdk:assembleDebugUnitTest

      - run:
          name: Build connected tests
          command: ./gradlew :launchdarkly-android-client-sdk:assembleDebugAndroidTest

      # Save caches
      - android/save-build-cache
      - android/save-gradle-cache

      # Run unit tests that do not require the emulator
      - run:
          name: Run local tests
          command: ./gradlew :launchdarkly-android-client-sdk:testDebugUnitTest

      # Now wait for emulator to fully start
      - android/wait-for-emulator

      # Additional validation that emulator is fully started and will accept adb
      # commands
      - run:
          name: Validate retrieving emulator SDK version
          command: |
            while ! adb shell getprop ro.build.version.sdk; do
              sleep 1
            done

      # Necessary for test mocking to disable network access through WiFi
      # configuration, allowing testing of behavior when device is offline
      - run:
          name: Disable mobile data for network tests
          command: adb shell svc data disable

      - run:
          name: Fetch logcat and props
          background: true
          command: |
            mkdir -p ~/artifacts
            adb shell getprop | tee -a ~/artifacts/props.txt
            adb logcat | tee -a ~/artifacts/logcat.txt

      - android/run-tests:
          max-tries: 1

      - android/kill-emulators

      - run:
          name: Validate package creation
          command: ./gradlew packageRelease --console=plain -PdisablePreDex

      - run:
          name: Validate Javadoc
          command: ./gradlew Javadoc
      
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results
            cp -r ./launchdarkly-android-client-sdk/build/test-results/testDebugUnitTest ~/test-results/
            cp -r ./launchdarkly-android-client-sdk/build/outputs/androidTest-results/*  ~/test-results/
          when: always

      - run:
          name: Save artifacts
          command: |
            mv ./launchdarkly-android-client-sdk/build/test-results ~/artifacts
            mv ./launchdarkly-android-client-sdk/build/reports      ~/artifacts
            mv ./launchdarkly-android-client-sdk/build/outputs      ~/artifacts
            mv ./launchdarkly-android-client-sdk/build/docs         ~/artifacts
          when: always

      - store_test_results:
            path: ~/test-results
      - store_artifacts:
            path: ~/artifacts

  contract-tests:
    executor:
      name: android/android-machine
      resource-class: large
    environment:
      TEST_HARNESS_PARAMS: -junit /home/circleci/junit/contract-tests-junit.xml
    steps:
      - checkout

      # Create and start emulator
      - android/create-avd:
          avd-name: ci-android-avd
          system-image: system-images;android-25;default;x86
          install: true

      - android/start-emulator:
          avd-name: ci-android-avd
          wait-for-emulator: false

      # Perform tasks we can do while waiting for emulator to start

      # Restore caches
      - android/restore-gradle-cache
      - android/restore-build-cache:
          cache-prefix: contract-tests

      - run:
          name: Build local tests
          command: make build-contract-tests

      # Save caches
      - android/save-build-cache:
          cache-prefix: contract-tests
      - android/save-gradle-cache

      # Wait for emulator
      - android/wait-for-emulator

      # Additional validation that emulator is fully started and will accept adb
      # commands
      - run:
          name: Validate retrieving emulator SDK version
          command: |
            while ! adb shell getprop ro.build.version.sdk; do
              sleep 1
            done

      - run: make start-contract-test-service
      - run: mkdir ~/junit
      - run: make run-contract-tests
      - store_test_results:
          path: ~/junit

workflows:
  test:
    jobs:
      - build
      - contract-tests